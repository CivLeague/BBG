print("----------------- GG Fix by D. ----------------------");

LuaEvents = ExposedMembers.LuaEvents;

function OnUnitUpgraded( playerID:number, unitID:number )
	local bsea = false
	local pUnit = UnitManager.GetUnit(playerID, unitID)
	if ( GameInfo.Units[pUnit:GetUnitType()].Domain == "DOMAIN_SEA" ) then
		bsea = true;	
	end

	if (playerID ~= nil) then
		if (playerID > -1 and playerID ~= 63 and playerID ~= 62 and playerID ~= 1000) then
			-- Step 1: Remove the bonuses
			print("OnUnitUpgraded: Remove GG / GA Bonuses");

			if bsea == false then
				LuaEvents.UIDoGGFix(playerID, unitID);
			else
				LuaEvents.UIDoGAFix(playerID, unitID);
			end

			local pPlayer = Players[playerID]
			local bRemove_Bonus = true
			-- Step 2: Check whether the unit is right to a valid GG

			if (pPlayer:IsAlive() == true and bsea == false) then
				playerUnits = pPlayer:GetUnits()
				for j, unit in playerUnits:Members() do	

					if UnitManager.GetTypeName(unit) == "UNIT_GREAT_GENERAL" then
						local unitGreatPerson = unit:GetGreatPerson();
						if unitGreatPerson then
							local individual = unitGreatPerson:GetIndividual();
						end
						pUnitGG = unit
						pUnitGG_plot = Map.GetPlot(unit:GetX(), unit:GetY())
						--print("GG X:", pUnitGG_plot:GetX(), "Y:",pUnitGG_plot:GetY())
						local pUnit = UnitManager.GetUnit(playerID, unitID)
						local pUnit_Type = UnitManager.GetTypeName(pUnit)
						local pUnit_plot = Map.GetPlot(pUnit:GetX(), pUnit:GetY())
						--print("Unit X:", pUnit_plot:GetX(), "Y:",pUnit_plot:GetY())
						if ((pUnit_plot:GetX() <= pUnitGG_plot:GetX() + 2) and (pUnit_plot:GetX() >= pUnitGG_plot:GetX() - 2) and (pUnit_plot:GetY() <= pUnitGG_plot:GetY() + 2) and (pUnit_plot:GetY() >= pUnitGG_plot:GetY() - 2)) then
							-- Classical & Medieval 57, 58, 56,
							if ( (individual == 57 or individual == 58 or individual == 56 ) and ( pUnit_Type == "UNIT_SKIRMISHER" or pUnit_Type == "UNIT_SWORDSMAN" or pUnit_Type == "UNIT_WARRIOR_MONK" or pUnit_Type == "UNIT_PIKEMAN" or pUnit_Type == "UNIT_CROSSBOWMAN" or pUnit_Type == "UNIT_HORSEMAN" or pUnit_Type == "UNIT_COUSER" or pUnit_Type == "UNIT_KNIGHT" or pUnit_Type == "UNIT_CATAPULT" )  ) then
								print("No need to remove Classical & Medieval")
								bRemove_Bonus = false
								break
							-- Medieval and Renaissance 176, 59, 60
							elseif ( (individual == 176 or individual == 59 or individual == 60 ) and ( pUnit_Type == "UNIT_SKIRMISHER" or pUnit_Type == "UNIT_MUSKETMAN" or pUnit_Type == "UNIT_PIKE_AND_SHOT" or pUnit_Type == "UNIT_PIKEMAN" or pUnit_Type == "UNIT_CROSSBOWMAN" or pUnit_Type == "UNIT_KNIGHT" or pUnit_Type == "UNIT_COUSER" or pUnit_Type == "UNIT_BOMBARD" )  ) then
								print("No need to remove Medieval and Renaissance")
								bRemove_Bonus = false
								break
							-- Renaissance and Industrial 63, 61, 62
							elseif ( (individual == 61 or individual == 62 or individual == 63 ) and ( pUnit_Type == "UNIT_RANGER" or pUnit_Type == "UNIT_MUSKETMAN" or pUnit_Type == "UNIT_PIKE_AND_SHOT" or pUnit_Type == "UNIT_FIELD_CANNON" or pUnit_Type == "UNIT_CAVALRY" or pUnit_Type == "UNIT_CUIRASSIER" or pUnit_Type == "UNIT_BOMBARD" )  ) then
								print("No need to remove Renaissance and Industrial")
								bRemove_Bonus = false
								break
							-- Industrial and Modern 65, 66, 64 
							elseif ( (individual == 64 or individual == 65 or individual == 66 ) and ( pUnit_Type == "UNIT_RANGER" or pUnit_Type == "UNIT_INFANTRY" or pUnit_Type == "UNIT_TANK" or pUnit_Type == "UNIT_FIELD_CANNON" or pUnit_Type == "UNIT_AT_CREW" or pUnit_Type == "UNIT_CUIRASSIER" or pUnit_Type == "UNIT_ARTILLERY" )  ) then
								print("No need to remove Renaissance and Industrial")
								bRemove_Bonus = false
								break
							-- Modern and Atomic 68, 67, 69
							elseif ( (individual == 67 or individual == 68 or individual == 69 ) and ( pUnit_Type == "UNIT_MACHINE_GUN" or pUnit_Type == "UNIT_INFANTRY" or pUnit_Type == "UNIT_TANK" or pUnit_Type == "UNIT_SPEC_OPS" or pUnit_Type == "UNIT_AT_CREW" or pUnit_Type == "UNIT_HELICOPTER" or pUnit_Type == "UNIT_ARTILLERY" )  ) then
								print("No need to remove Modern and Atomic")
								bRemove_Bonus = false
								break
							-- Atomic and Information 177, 70, 71, 72
							elseif ( (individual == 70 or individual == 71 or individual == 72 or individual == 177) and ( pUnit_Type == "UNIT_MACHINE_GUN" or pUnit_Type == "MECHANIZED_INFANTRY" or pUnit_Type == "MODERN_ARMOR" or pUnit_Type == "UNIT_SPEC_OPS" or pUnit_Type == "UNIT_MODERN_AT" or pUnit_Type == "UNIT_HELICOPTER" or pUnit_Type == "UNIT_ROCKET_ARTILLERY" or pUnit_Type == "UNIT_GIANT_DEATH_ROBOT")  ) then
								print("No need to remove Atomic and Information")
								bRemove_Bonus = false
								break
							-- Information 73, 74
							elseif ( (individual == 73 or individual == 74) and ( pUnit_Type == "MECHANIZED_INFANTRY" or pUnit_Type == "MODERN_ARMOR" or pUnit_Type == "UNIT_MODERN_AT" or pUnit_Type == "UNIT_ROCKET_ARTILLERY" or pUnit_Type == "UNIT_GIANT_DEATH_ROBOT")  ) then
								print("No need to remove Information")
								bRemove_Bonus = false
								break
							else
								print("In GA Range but old units... removing")
							end
						end
					end
				end

			elseif (pPlayer:IsAlive() == true and bsea == true) then

				-- It is a sea unit check for admiral

				for j, unit in playerUnits:Members() do	

					if UnitManager.GetTypeName(unit) == "UNIT_GREAT_ADMIRAL" then
						local unitGreatPerson = unit:GetGreatPerson();
						if unitGreatPerson then
							local individual = unitGreatPerson:GetIndividual();
							-- Classical & Medieval 0, 1, 2,
							-- Medieval and Renaissance 3, 4, 5
							-- Renaissance and Industrial 6, 7, 8, 174
							-- Industrial and Modern 9, 10, 11 
							-- Modern and Atomic 12, 13, 175
							-- Atomic and Information 14, 15, 16
							-- Information 17
						end
						pUnitGG = unit
						pUnitGG_plot = Map.GetPlot(unit:GetX(), unit:GetY())
						--print("GA X:", pUnitGG_plot:GetX(), "Y:",pUnitGG_plot:GetY())
						local pUnit = UnitManager.GetUnit(playerID, unitID)
						local pUnit_Type = UnitManager.GetTypeName(pUnit)
						local pUnit_plot = Map.GetPlot(pUnit:GetX(), pUnit:GetY())
						--print("Unit X:", pUnit_plot:GetX(), "Y:",pUnit_plot:GetY())
						if ((pUnit_plot:GetX() <= pUnitGG_plot:GetX() + 2) and (pUnit_plot:GetX() >= pUnitGG_plot:GetX() - 2) and (pUnit_plot:GetY() <= pUnitGG_plot:GetY() + 2) and (pUnit_plot:GetY() >= pUnitGG_plot:GetY() - 2)) then
							--print("GG in Range")
							-- Classical & Medieval 
							if ( (individual == 0 or individual == 1 or individual == 2 ) and ( pUnit_Type == "UNIT_QUADRIREME" ) ) then
								print("No need to remove Classical & Medieval")
								bRemove_Bonus = false
								break
							-- Medieval and Renaissance 
							elseif ( (individual == 3 or individual == 4 or individual == 5 ) and ( pUnit_Type == "UNIT_CARAVEL" or pUnit_Type == "UNIT_FRIGATE" or pUnit_Type == "UNIT_PRIVATEER" ) ) then
								print("No need to remove Medieval and Renaissance")
								bRemove_Bonus = false
								break
							-- Renaissance and Industrial 
							elseif ( (individual == 6 or individual == 7 or individual == 8 or individual == 174) and ( pUnit_Type == "UNIT_CARAVEL" or pUnit_Type == "UNIT_FRIGATE" or pUnit_Type == "UNIT_IRONCLAD" or pUnit_Type == "UNIT_PRIVATEER"  ) ) then
								print("No need to remove Renaissance and Industrial")
								bRemove_Bonus = false
								break
							-- Industrial and Modern 
							elseif ( (individual == 9 or individual == 10 or individual == 11 ) and ( pUnit_Type == "UNIT_IRONCLAD" or pUnit_Type == "UNIT_BATTLESHIP" or pUnit_Type == "UNIT_SUBMARINE"  ) ) then
								print("No need to remove Renaissance and Industrial")
								bRemove_Bonus = false
								break	
							-- Modern and Atomic 
							elseif ( (individual == 12 or individual == 13 or individual == 175 ) and ( pUnit_Type == "UNIT_BATTLESHIP" or pUnit_Type == "UNIT_SUBMARINE" or pUnit_Type == "UNIT_AIRCRAFT_CARRIER" or pUnit_Type == "UNIT_DESTROYER" ) ) then
								print("No need to remove Modern and Atomic")
								bRemove_Bonus = false
								break
							-- Atomic and Information 
							elseif ( (individual == 14 or individual == 15 or individual == 16 ) and ( pUnit_Type == "UNIT_AIRCRAFT_CARRIER" or pUnit_Type == "UNIT_DESTROYER" or pUnit_Type == "NUCLEAR_SUBMARINE" or pUnit_Type == "UNIT_MISSILE_CRUISER") ) then
								print("No need to remove Atomic and Information")
								bRemove_Bonus = false
								break
							-- Information 
							elseif ( (individual == 17) and ( pUnit_Type == "NUCLEAR_SUBMARINE" or pUnit_Type == "UNIT_MISSILE_CRUISER") ) then
								print("No need to remove Information")
								bRemove_Bonus = false
								break
							end
						end
					end
				end
			end
			-- Step 3: Apply the Buff
			if bRemove_Bonus == false then
				if bsea == false then
					--print("OnUnitUpgraded: Reapplied GG Bonuses");
					LuaEvents.UIDoGGFix_2(playerID, unitID);
				else
					--print("OnUnitUpgraded: Reapplied GA Bonuses");
					LuaEvents.UIDoGAFix_2(playerID, unitID);
				end
			end
		end
	end


end

Events.UnitUpgraded.Add( OnUnitUpgraded );


