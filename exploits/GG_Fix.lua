-- GG bug fix version 2 only in Gamescript lua
--print("GG loaded")


function OnUnitMoved(playerID : number, unitID : number)
	--print("OnUnitMoved Game", playerID)
	local bsea = false
	local pUnit = UnitManager.GetUnit(playerID, unitID)

	if (playerID ~= nil) then
		if (playerID > -1 and playerID ~= 63 and playerID ~= 62 and playerID ~= 1000) then
			local pPlayer = Players[playerID]
			local bRemove_Bonus = true

			if (pPlayer:IsAlive() == true) then
				playerUnits = pPlayer:GetUnits()
				for j, unit in playerUnits:Members() do	
					--print(UnitManager.GetTypeName(unit))
					if UnitManager.GetTypeName(unit) == "LOC_UNIT_GREAT_GENERAL_NAME" then
						local unitGreatPerson = unit:GetGreatPerson();
						local individual = nil;
						--print("unit:GetGreatPerson()",unit:GetGreatPerson())
						if (unitGreatPerson ~=nil) then
							individual = unitGreatPerson:GetIndividual();
						end
						pUnitGG = unit
						pUnitGG_plot = Map.GetPlot(unit:GetX(), unit:GetY())
						--print("GG X:", pUnitGG_plot:GetX(), "Y:",pUnitGG_plot:GetY())
						--print ("individual",individual)
						local pUnit = UnitManager.GetUnit(playerID, unitID)
						local pUnit_Type = UnitManager.GetTypeName(pUnit)
						--print("pUnit_Type",pUnit_Type)
						local pUnit_plot = Map.GetPlot(pUnit:GetX(), pUnit:GetY())
						--print("Unit X:", pUnit_plot:GetX(), "Y:",pUnit_plot:GetY())
						if ((pUnit_plot:GetX() <= pUnitGG_plot:GetX() + 2) and (pUnit_plot:GetX() >= pUnitGG_plot:GetX() - 2) and (pUnit_plot:GetY() <= pUnitGG_plot:GetY() + 2) and (pUnit_plot:GetY() >= pUnitGG_plot:GetY() - 2)) then
							-- Classical & Medieval 57, 58, 56,
							if ( (individual == 57 or individual == 58 or individual == 56 ) and ( pUnit_Type == "LOC_UNIT_SKIRMISHER_NAME" or pUnit_Type =="LOC_UNIT_MALI_MANDEKALU_CAVALRY_NAME" or pUnit_Type =="LOC_UNIT_INCA_WARAKAQ_NAME" or pUnit_Type =="LOC_UNIT_HUNGARY_BLACK_ARMY_NAME" or pUnit_Type =="LOC_UNIT_ZULU_IMPI_NAME" or pUnit_Type =="LOC_UNIT_MAPUCHE_MALON_RAIDER_NAME" or pUnit_Type =="LOC_UNIT_GEORGIAN_KHEVSURETI_NAME" or pUnit_Type =="LOC_UNIT_MONGOLIAN_KESHIG_NAME" or pUnit_Type =="LOC_UNIT_POLISH_HUSSAR_NAME" or pUnit_Type =="LOC_UNIT_MACEDONIAN_HETAIROI_NAME" or pUnit_Type =="LOC_UNIT_PERSIAN_IMMORTAL_NAME" or pUnit_Type =="LOC_UNIT_KHMER_DOMREY_NAME" or pUnit_Type =="LOC_UNIT_CHINESE_CROUCHING_TIGER_NAME" or pUnit_Type =="LOC_UNIT_ARABIAN_MAMLUK_NAME" or pUnit_Type == "LOC_UNIT_SWORDSMAN_NAME" or pUnit_Type =="LOC_UNIT_KONGO_SHIELD_BEARER_NAME" or pUnit_Type =="LOC_UNIT_INDIAN_VARU_NAME" or pUnit_Type =="LOC_UNIT_NORWEGIAN_BERSERKER_NAME" or pUnit_Type =="LOC_UNIT_JAPANESE_SAMURAI_NAME" or pUnit_Type =="LOC_UNIT_ROMAN_LEGION_NAME" or pUnit_Type == "LOC_UNIT_SCYTHIAN_HORSE_ARCHER_NAME" or pUnit_Type == "LOC_UNIT_MACEDONIAN_HYPASPIST_NAME" or pUnit_Type == "LOC_UNIT_WARRIOR_MONK_NAME" or pUnit_Type == "LOC_UNIT_PIKEMAN_NAME" or pUnit_Type == "LOC_UNIT_CROSSBOWMAN_NAME" or pUnit_Type == "LOC_UNIT_HORSEMAN_NAME" or pUnit_Type == "LOC_UNIT_COURSER_NAME" or pUnit_Type == "LOC_UNIT_KNIGHT_NAME" or pUnit_Type == "LOC_UNIT_CATAPULT_NAME" or pUnit_Type =="LOC_UNIT_MAORI_TOA_NAME" )  ) then
								--print("No need to remove Classical & Medieval")
								bRemove_Bonus = false
								break
							-- Medieval and Renaissance 176, 59, 60
							elseif ( (individual == 176 or individual == 59 or individual == 60 ) and ( pUnit_Type == "LOC_UNIT_SKIRMISHER_NAME" or pUnit_Type =="LOC_UNIT_SWEDEN_CAROLEAN_NAME" or pUnit_Type =="LOC_UNIT_SULEIMAN_JANISSARY_NAME" or pUnit_Type =="LOC_UNIT_MALI_MANDEKALU_CAVALRY_NAME" or pUnit_Type =="LOC_UNIT_INCA_WARAKAQ_NAME" or pUnit_Type =="LOC_UNIT_HUNGARY_BLACK_ARMY_NAME" or pUnit_Type =="LOC_UNIT_KOREAN_HWACHA_NAME" or pUnit_Type =="LOC_UNIT_ZULU_IMPI_NAME" or pUnit_Type =="LOC_UNIT_MAPUCHE_MALON_RAIDER_NAME" or pUnit_Type =="LOC_UNIT_MONGOLIAN_KESHIG_NAME" or pUnit_Type =="LOC_UNIT_POLISH_HUSSAR_NAME" or pUnit_Type =="LOC_UNIT_CHINESE_CROUCHING_TIGER_NAME" or pUnit_Type =="LOC_UNIT_ARABIAN_MAMLUK_NAME" or pUnit_Type == "LOC_UNIT_MUSKETMAN_NAME" or pUnit_Type =="LOC_UNIT_NORWEGIAN_BERSERKER_NAME" or pUnit_Type =="LOC_UNIT_JAPANESE_SAMURAI_NAME" or pUnit_Type =="LOC_UNIT_SPANISH_CONQUISTADOR_NAME" or pUnit_Type == "LOC_UNIT_PIKE_AND_SHOT_NAME" or pUnit_Type == "LOC_UNIT_PIKEMAN_NAME" or pUnit_Type == "LOC_UNIT_CROSSBOWMAN_NAME" or pUnit_Type == "LOC_UNIT_KNIGHT_NAME" or pUnit_Type == "LOC_UNIT_COURSER_NAME" or pUnit_Type == "LOC_UNIT_BOMBARD_NAME" )  ) then
								--print("No need to remove Medieval and Renaissance")
								bRemove_Bonus = false
								break
							-- Renaissance and Industrial 63, 61, 62
							elseif ( (individual == 61 or individual == 62 or individual == 63 ) and ( pUnit_Type == "LOC_UNIT_RANGER_NAME" or pUnit_Type =="LOC_UNIT_SWEDEN_CAROLEAN_NAME" or pUnit_Type =="LOC_UNIT_SULEIMAN_JANISSARY_NAME" or pUnit_Type =="LOC_UNIT_HUNGARY_HUSZAR_NAME" or pUnit_Type =="LOC_UNIT_KOREAN_HWACHA_NAME" or pUnit_Type =="LOC_UNIT_SCOTTISH_HIGHLANDER_NAME" or pUnit_Type == "LOC_UNIT_ENGLISH_REDCOAT_NAME" or pUnit_Type == "LOC_UNIT_FRENCH_GARDE_IMPERIALE_NAME" or pUnit_Type =="LOC_UNIT_RUSSIAN_COSSACK_NAME" or pUnit_Type == "LOC_UNIT_AMERICAN_ROUGH_RIDER_NAME" or pUnit_Type =="LOC_UNIT_SPANISH_CONQUISTADOR_NAME" or pUnit_Type == "LOC_UNIT_MUSKETMAN_NAME" or pUnit_Type == "LOC_UNIT_PIKE_AND_SHOT_NAME" or pUnit_Type == "LOC_UNIT_FIELD_CANNON_NAME" or pUnit_Type == "LOC_UNIT_CAVALRY_NAME" or pUnit_Type == "LOC_UNIT_CUIRASSIER_NAME" or pUnit_Type == "LOC_UNIT_BOMBARD_NAME" )  ) then
								--print("No need to remove Renaissance and Industrial")
								bRemove_Bonus = false
								break
							-- Industrial and Modern 65, 66, 64 
							elseif ( (individual == 64 or individual == 65 or individual == 66 ) and ( pUnit_Type == "LOC_UNIT_RANGER_NAME" or pUnit_Type =="LOC_UNIT_HUNGARY_HUSZAR_NAME" or pUnit_Type =="LOC_UNIT_CANADA_MOUNTIE_NAME" or pUnit_Type =="LOC_UNIT_SCOTTISH_HIGHLANDER_NAME" or pUnit_Type =="LOC_UNIT_DIGGER_NAME" or pUnit_Type == "LOC_UNIT_FRENCH_GARDE_IMPERIALE_NAME" or pUnit_Type == "LOC_UNIT_ENGLISH_REDCOAT_NAME" or pUnit_Type =="LOC_UNIT_RUSSIAN_COSSACK_NAME" or pUnit_Type == "LOC_UNIT_AMERICAN_ROUGH_RIDER_NAME" or pUnit_Type == "LOC_UNIT_INFANTRY_NAME" or pUnit_Type == "LOC_UNIT_TANK_NAME" or pUnit_Type == "LOC_UNIT_FIELD_CANNON_NAME" or pUnit_Type == "LOC_UNIT_AT_CREW_NAME" or pUnit_Type == "LOC_UNIT_CUIRASSIER_NAME" or pUnit_Type == "LOC_UNIT_ARTILLERY_NAME" )  ) then
								--print("No need to remove Modern and Industrial")
								bRemove_Bonus = false
								break
							-- Modern and Atomic 68, 67, 69
							elseif ( (individual == 67 or individual == 68 or individual == 69 ) and ( pUnit_Type == "LOC_UNIT_MACHINE_GUN_NAME" or pUnit_Type =="LOC_UNIT_CANADA_MOUNTIE_NAME" or pUnit_Type =="LOC_UNIT_DIGGER_NAME" or pUnit_Type == "LOC_UNIT_INFANTRY_NAME" or pUnit_Type == "LOC_UNIT_TANK_NAME" or pUnit_Type == "LOC_UNIT_SPEC_OPS_NAME" or pUnit_Type == "LOC_UNIT_AT_CREW_NAME" or pUnit_Type == "LOC_UNIT_HELICOPTER_NAME" or pUnit_Type == "LOC_UNIT_ARTILLERY_NAME" )  ) then
								--print("No need to remove Modern and Atomic")
								bRemove_Bonus = false
								break
							-- Atomic and Information 177, 70, 71, 72
							elseif ( (individual == 70 or individual == 71 or individual == 72 or individual == 177) and ( pUnit_Type == "LOC_UNIT_MACHINE_GUN_NAME" or pUnit_Type == "MECHANIZED_INFANTRY_NAME" or pUnit_Type == "MODERN_ARMOR_NAME" or pUnit_Type == "LOC_UNIT_SPEC_OPS_NAME" or pUnit_Type == "LOC_UNIT_MODERN_AT_NAME" or pUnit_Type == "LOC_UNIT_HELICOPTER_NAME" or pUnit_Type == "LOC_UNIT_ROCKET_ARTILLERY_NAME" or pUnit_Type == "LOC_UNIT_GIANT_DEATH_ROBOT_NAME")  ) then
								--print("No need to remove Atomic and Information")
								bRemove_Bonus = false
								break
							-- Information 73, 74
							elseif ( (individual == 73 or individual == 74) and ( pUnit_Type == "MECHANIZED_INFANTRY_NAME" or pUnit_Type == "MODERN_ARMOR_NAME" or pUnit_Type == "LOC_UNIT_MODERN_AT_NAME" or pUnit_Type == "LOC_UNIT_ROCKET_ARTILLERY_NAME" or pUnit_Type == "LOC_UNIT_GIANT_DEATH_ROBOT_NAME")  ) then
								--print("No need to remove Information")
								bRemove_Bonus = false
								break
							else
								--print("In GG Range but old units... removing")
								bRemove_Bonus = true
							end
							else
							--print("No GG in Range... removing")
							bRemove_Bonus = true
						end
					end
				end
				if (bRemove_Bonus == true ) then
					playerUnits = pPlayer:GetUnits()
					-- It is a sea unit check for admiral

					for j, unit in playerUnits:Members() do	

						if UnitManager.GetTypeName(unit) == "LOC_UNIT_GREAT_ADMIRAL_NAME" then
							local unitGreatPerson = unit:GetGreatPerson();
							local individual = nil;
							--print("unit:GetGreatPerson()",unit:GetGreatPerson())
							if (unitGreatPerson ~=nil) then
								individual = unitGreatPerson:GetIndividual();	
							end
							--print ("individual",individual)
							-- Classical & Medieval 0, 1, 2,
							-- Medieval and Renaissance 3, 4, 5
							-- Renaissance and Industrial 6, 7, 8, 174
							-- Industrial and Modern 9, 10, 11 
							-- Modern and Atomic 12, 13, 175
							-- Atomic and Information 14, 15, 16
							-- Information 17
							pUnitGG = unit
							pUnitGG_plot = Map.GetPlot(unit:GetX(), unit:GetY())
						----print("GA X:", pUnitGG_plot:GetX(), "Y:",pUnitGG_plot:GetY())
							local pUnit = UnitManager.GetUnit(playerID, unitID)
							local pUnit_Type = UnitManager.GetTypeName(pUnit)
						----print("UnitManager.GetTypeName(pUnit)",UnitManager.GetTypeName(pUnit))
							local pUnit_plot = Map.GetPlot(pUnit:GetX(), pUnit:GetY())
						----print("Unit X:", pUnit_plot:GetX(), "Y:",pUnit_plot:GetY())
							if ((pUnit_plot:GetX() <= pUnitGG_plot:GetX() + 2) and (pUnit_plot:GetX() >= pUnitGG_plot:GetX() - 2) and (pUnit_plot:GetY() <= pUnitGG_plot:GetY() + 2) and (pUnit_plot:GetY() >= pUnitGG_plot:GetY() - 2)) then
							----print("GA in Range")
							-- Classical & Medieval 
								if ( (individual == 0 or individual == 1 or individual == 2 ) and ( pUnit_Type == "LOC_UNIT_QUADRIREME_NAME" or pUnit_Type =="LOC_UNIT_INDONESIAN_JONG_NAME" or pUnit_Type =="LOC_UNIT_OTTOMAN_BARBARY_CORSAIR_NAME") ) then
								--print("No need to remove Classical & Medieval")
								bRemove_Bonus = false
								bsea = true
								break
							-- Medieval and Renaissance 
								elseif ( (individual == 3 or individual == 4 or individual == 5 ) and ( pUnit_Type == "LOC_UNIT_CARAVEL_NAME" or pUnit_Type =="LOC_UNIT_OTTOMAN_BARBARY_CORSAIR_NAME" or pUnit_Type =="LOC_UNIT_DUTCH_ZEVEN_PROVINCIEN_NAME" or pUnit_Type =="LOC_UNIT_INDONESIAN_JONG_NAME" or pUnit_Type =="LOC_UNIT_ENGLISH_SEADOG_NAME" or pUnit_Type == "LOC_UNIT_FRIGATE_NAME" or pUnit_Type == "LOC_UNIT_PRIVATEER_NAME" ) ) then
								--print("No need to remove Medieval and Renaissance")
								bRemove_Bonus = false
								bsea = true
								break
							-- Renaissance and Industrial 
								elseif ( (individual == 6 or individual == 7 or individual == 8 or individual == 174) and ( pUnit_Type == "LOC_UNIT_CARAVEL_NAME" or pUnit_Type =="LOC_UNIT_DUTCH_ZEVEN_PROVINCIEN_NAME" or pUnit_Type =="LOC_UNIT_BRAZILIAN_MINAS_GERAES_NAME" or pUnit_Type =="LOC_UNIT_ENGLISH_SEADOG_NAME" or pUnit_Type == "LOC_UNIT_FRIGATE_NAME" or pUnit_Type == "LOC_UNIT_IRONCLAD_NAME" or pUnit_Type == "LOC_UNIT_PRIVATEER_NAME"  ) ) then
								--print("No need to remove Renaissance and Industrial")
								bRemove_Bonus = false
								bsea = true
								break
							-- Industrial and Modern 
								elseif ( (individual == 9 or individual == 10 or individual == 11 ) and ( pUnit_Type == "LOC_UNIT_IRONCLAD_NAME" or pUnit_Type =="LOC_UNIT_BRAZILIAN_MINAS_GERAES_NAME" or pUnit_Type =="LOC_UNIT_GERMAN_UBOAT_NAME" or pUnit_Type == "LOC_UNIT_BATTLESHIP_NAME" or pUnit_Type == "LOC_UNIT_SUBMARINE_NAME"  ) ) then
								--print("No need to remove Renaissance and Industrial")
								bRemove_Bonus = false
								bsea = true
								break	
							-- Modern and Atomic 
								elseif ( (individual == 12 or individual == 13 or individual == 175 ) and ( pUnit_Type == "LOC_UNIT_BATTLESHIP_NAME" or pUnit_Type =="LOC_UNIT_GERMAN_UBOAT_NAME" or pUnit_Type == "LOC_UNIT_SUBMARINE_NAME" or pUnit_Type == "LOC_UNIT_AIRCRAFT_CARRIER_NAME" or pUnit_Type == "LOC_UNIT_DESTROYER_NAME" ) ) then
								--print("No need to remove Modern and Atomic")
								bRemove_Bonus = false
								bsea = true
								break
							-- Atomic and Information 
								elseif ( (individual == 14 or individual == 15 or individual == 16 ) and ( pUnit_Type == "LOC_UNIT_AIRCRAFT_CARRIER_NAME" or pUnit_Type == "LOC_UNIT_DESTROYER_NAME" or pUnit_Type == "NUCLEAR_SUBMARINE_NAME" or pUnit_Type == "LOC_UNIT_MISSILE_CRUISER_NAME") ) then
								--print("No need to remove Atomic and Information")
								bRemove_Bonus = false
								bsea = true
								break
							-- Information 
								elseif ( (individual == 17) and ( pUnit_Type == "NUCLEAR_SUBMARINE_NAME" or pUnit_Type == "LOC_UNIT_MISSILE_CRUISER_NAME") ) then
								--print("No need to remove Information")
								bRemove_Bonus = false
								bsea = true
								break
								else
								--print("In GA Range but old units... removing")
								end
							end
						end
					end
				end
			end
			-- Step 2: Check the Buff
			local unitAbilities = pUnit:GetAbility()
			if bRemove_Bonus == false then
				if bsea == false then
					if unitAbilities ~= nil then
						if (unitAbilities:GetAbilityCount("ABILITY_GREAT_GENERAL_MOVEMENT")<1) then
							unitAbilities:ChangeAbilityCount("ABILITY_GREAT_GENERAL_MOVEMENT",1)
						end
						if (unitAbilities:GetAbilityCount("ABILITY_GREAT_GENERAL_STRENGTH")<1) then
							unitAbilities:ChangeAbilityCount("ABILITY_GREAT_GENERAL_STRENGTH",1)
						end
					end
					else
					if unitAbilities ~= nil then
						if (unitAbilities:GetAbilityCount("ABILITY_GREAT_ADMIRAL_MOVEMENT")<1) then
							unitAbilities:ChangeAbilityCount("ABILITY_GREAT_ADMIRAL_MOVEMENT",1)
						end
						if (unitAbilities:GetAbilityCount("ABILITY_GREAT_ADMIRAL_STRENGTH")<1) then
							unitAbilities:ChangeAbilityCount("ABILITY_GREAT_ADMIRAL_STRENGTH",1)
						end
					end
				end

				else

				if unitAbilities ~= nil then
					if (unitAbilities:GetAbilityCount("ABILITY_GREAT_GENERAL_MOVEMENT")>0) then
						unitAbilities:ChangeAbilityCount("ABILITY_GREAT_GENERAL_MOVEMENT",-1)
					end
					if (unitAbilities:GetAbilityCount("ABILITY_GREAT_GENERAL_STRENGTH")>0) then
						unitAbilities:ChangeAbilityCount("ABILITY_GREAT_GENERAL_STRENGTH",-1)
					end
					if (unitAbilities:GetAbilityCount("ABILITY_GREAT_ADMIRAL_MOVEMENT")>0) then
						unitAbilities:ChangeAbilityCount("ABILITY_GREAT_ADMIRAL_MOVEMENT",-1)
					end
					if (unitAbilities:GetAbilityCount("ABILITY_GREAT_ADMIRAL_STRENGTH")>0) then
						unitAbilities:ChangeAbilityCount("ABILITY_GREAT_ADMIRAL_STRENGTH",-1)
					end
				end
			end
		end
	end

end


function Initialize()
	--print("GG Bug init")
	GameEvents.OnUnitMoved.Add( OnUnitMoved )
end

Initialize();